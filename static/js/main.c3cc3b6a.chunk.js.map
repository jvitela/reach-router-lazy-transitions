{"version":3,"sources":["Utils.js","pages/First/logo.svg","lib/Utils.js","lib/AppRouter.js","pages/First/First.js","routes.js","serviceWorker.js","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","__webpack_require__","d","__webpack_exports__","module","exports","p","initialState","locationKey","result","entities","reducer","state","action","type","location","key","concat","Object","objectSpread","defineProperty","initialProps","isExiting","isEntered","onLocationChanged","arguments","length","undefined","reduce","accumulator","currKey","onPageEnter","filter","itm","_state$entities","objectWithoutProperties","map","_toPropertyKey","onPageExited","onPageEntered","PageTransitionRouter","_ref2","routes","timeout","classNames","_ref2$onLoading","onLoading","_noop","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useEffect","locationChanged","_groupEntities","toRender","toFetchData","forEach","entity","push","groupEntities","react_default","a","createElement","Fragment","_ref3","AppRouter_RouterLocation","onPageReady","iniProps","pageEnter","react_transition_group","className","_ref4","onExited","pageExited","onEntered","pageEntered","RouterLocation","nextProps","this","props","_this$props","es","route","Component","getComponent","path","React","importComponent","getLazyComponent","component","withPageLifeCycle","Error","LazyPage","lazy","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","abrupt","default","stop","react","fallback","Page","PageLoader","_React$Component2","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","fetchInitialProps","then","_fetchInitialProps","_callee2","_context2","getInitialProps","PageRenderer","_ref6","pageProps","assign","links","AppRouter","_ref","AppRouter_PageTransitionRouter","First","navigate","success","src","logo","alt","text","to","onClick","onNavigate","bind","getRoutes","basePath","e","cancel","Boolean","window","hostname","match","ReactDOM","render","_useState","useState","_useState2","isLoading","setLoading","lib_AppRouter","debounceCall","document","getElementById","_debounce","set","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3cc3b6a.chunk.js","sourcesContent":["\nexport function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst onLocationChanged = (state, location) => {\n    const locationKey = location.key ||Â state.locationKey;\n    const result = state.result.concat(location.key);\n    const entities = {\n        ...state.entities,\n        [location.key]: {\n            location,\n            initialProps: null,\n            isExiting: false,\n            isEntered: false\n        }\n    };\n\n    return { locationKey, result, entities };\n};\n\nconst onPageEnter = (state, key, initialProps = {}) => {\n    const entities = state.result.reduce((accumulator, currKey) => {\n        if (currKey === key) {\n            accumulator[key] = {\n                ...state.entities[key],\n                initialProps,\n            };\n\n        } else {\n            accumulator[currKey] = {\n                ...state.entities[currKey],\n                isExiting: true,\n            };\n        }\n        return accumulator;\n    }, {});\n\n    return { ...state, entities };\n};\n\nconst onPageExited = (state, key) => {\n    const result = state.result.filter(itm => (itm !== key));\n    const { [key]: removed, ...entities } = state.entities;\n    return { ...state, result, entities };\n};\n\nconst onPageEntered = (state, key) => {\n    return {\n        ...state,\n        entities: {\n            ...state.entities,\n            [key]: {\n                ...state.entities[key],\n                isEntered: true\n            }\n        }\n    };\n};\n\nexport const locationChanged = location => ({ type: 'locationChanged', location });\nexport const pageEnter = (key, initialProps) => ({ type: 'pageEnter', key, initialProps });\nexport const pageExited = key => ({ type: 'pageExited', key });\nexport const pageEntered = key => ({ type: 'pageEntered', key });\n\nexport const initialState = {\n    locationKey: null,\n    result: [],\n    entities: {}\n};\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case 'locationChanged':\n            return onLocationChanged(state, action.location);\n\n        case 'pageEnter':\n            return onPageEnter(state, action.key, action.initialProps);\n\n        case 'pageExited':\n            return onPageExited(state, action.key);\n\n        case 'pageEntered':\n            return onPageEntered(state, action.key);\n\n        default:\n            return state;\n    }\n};\n","import React, { Suspense, lazy, useReducer, useEffect } from 'react'\nimport { Router, Location } from '@reach/router'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport _noop from 'lodash/noop'\nimport {\n    initialState,\n    reducer,\n    locationChanged,\n    pageEnter,\n    pageExited,\n    pageEntered,\n} from './Utils'\n\nconst AppRouter = props => {\n    return (\n        <Location>\n            {({ location }) =>\n                <PageTransitionRouter {...props} location={location} />\n            }\n        </Location >\n    );\n}\n\n/**\n * Handles page transitions on location change\n */\nconst PageTransitionRouter = ({\n    location,\n    routes,\n    timeout,\n    classNames,\n    onLoading = _noop,\n}) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        if (state.locationKey !== location.key) {\n            dispatch(locationChanged(location));\n            onLoading(true);\n        }\n    });\n\n    const { toRender, toFetchData } = groupEntities(state);\n\n    return (\n        <React.Fragment>\n            {// Routes that need to fetch data\n            toFetchData.map(({ entity, key }) => \n                <RouterLocation\n                    key={key}\n                    routes={routes}\n                    location={entity.location}\n                    initialProps={null}\n                    onPageReady={iniProps => { dispatch(pageEnter(key, iniProps)); onLoading(false); }}\n                />\n            )}\n            <TransitionGroup className=\"transition-group\">\n                {// Routes that are displayed\n                toRender.map(({ entity, key }) => \n                    <CSSTransition\n                        key={key}\n                        timeout={timeout}\n                        classNames={classNames}\n                        onExited={() => dispatch(pageExited(key))}\n                        onEntered={() => dispatch(pageEntered(key))}\n                    >\n                        <RouterLocation\n                            routes={routes}\n                            location={entity.location}\n                            initialProps={entity.initialProps}\n                        />\n                    </CSSTransition>\n                )}\n            </TransitionGroup>\n        </React.Fragment>\n    );\n};\n\nfunction groupEntities(state) {\n    const toRender = [];\n    const toFetchData = [];\n    state.result.forEach(key => {\n        const entity = state.entities[key];\n        if (entity.initialProps === null) {\n            // render a router that will output \n            //   a PageLoader wrapper while the initialData is being fetched            \n            toFetchData.push({ entity, key });\n\n        } else if (!entity.isExiting) {\n            // Only render the CSSTransition if the initialProps are set\n            //  And is not already exiting\n            toRender.push({ entity, key });\n        }\n    });\n    return { toRender, toFetchData };\n}\n\n/** \n * Renders the given location\n */\nclass RouterLocation extends React.Component {\n    // Prevent unnecessary renders\n    shouldComponentUpdate(nextProps) {\n        return (this.props.initialProps !== nextProps.initialProps);\n    }\n\n    render() {\n        const { routes, location, initialProps, onPageReady } = this.props;\n        return (\n            <Router location={location} className=\"container\">\n                {routes.map(route => {\n                    const Component = getComponent(route);\n                    return (\n                        <Component\n                            key={route.path}\n                            path={route.path}\n                            initialProps={initialProps}\n                            onPageReady={onPageReady}\n                        />\n                    );\n                })}\n            </Router>\n        );\n    }\n}\n\n/**\n * Return either a React.lazy or a HOC for initialProps\n* @param {object} route The route info\n*/\nconst getComponent = (route) => {\n    if (route.importComponent) {\n        return getLazyComponent(route);\n    }\n\n    if (route.component) {\n        return withPageLifeCycle(route.component, route);\n    }\n\n    throw new Error('A route must include a component or importComponent method');\n};\n\n/**\n * A HOC that returns a Lazy component\n * \n * @param {object} route The route info\n */\nconst getLazyComponent = (route) => {\n    const LazyPage = lazy(async () => {\n        const module = await route.importComponent();\n        // Return the module wrapped in a HOC\n        return {\n            ...module,\n            default: withPageLifeCycle(module.default, route)\n        };\n    });\n\n    return props => (\n        <Suspense fallback={null}>\n            <LazyPage {...props} />\n        </Suspense>\n    );\n}\n\nconst withPageLifeCycle = (Page, route) => {\n\n    class PageLoader extends React.Component {\n        // Load async dependencies for the page\n        //  Only once after the component mounts\n        componentDidMount() {\n            this.fetchInitialProps().then(this.props.onPageReady);\n        }\n\n        async fetchInitialProps() {\n            if (typeof Page.getInitialProps === 'function') {\n                const iniProps = await Page.getInitialProps(this.props);\n                return iniProps;\n            }\n            // return undefined or empty object\n        }\n\n        render() {\n            // Don't render anything yet\n            return null;\n        }\n    }\n\n    const PageRenderer = ({ initialProps, onPageReady, ...pageProps }) => (\n        <Page {...initialProps} {...pageProps} links={route.links} />\n    );\n\n    const Component = props => (\n        props.initialProps === null\n            ? <PageLoader {...props} />\n            : <PageRenderer {...props} />\n    );\n\n    return Component;\n}\n\nexport default AppRouter;","import React, { Component } from 'react';\nimport { Link } from '@reach/router'\nimport { sleep } from 'Utils'\nimport logo from './logo.svg';\nimport './First.css';\n\nexport default class First extends Component {\n\n   static async getInitialProps() {\n      await sleep(300);\n      return {\n         text: 'Cupcake ipsum dolor sit'\n      };\n   }\n\n   onNavigate() {\n      this.props.navigate(this.props.links.success);\n   }\n\n   render() {\n      return (\n         <div className=\"App\">\n            <header className=\"App-header\">\n               <img src={logo} className=\"App-logo\" alt=\"logo\" />\n               <p>\n                  <strong>{this.props.text}.</strong>\n                  Amet jelly-o caramels liquorice apple pie. \n                  Brownie lemon drops cookie tart gummies jelly beans I love soufflÃ©. \n                  Caramels apple pie powder tootsie roll I love jelly beans dessert danish I love. \n                  Halvah I love pie bear claw wafer macaroon halvah sesame snaps. \n                  Liquorice marzipan brownie icing.\n               </p>\n               <p>\n                  <Link to={this.props.links.success} className=\"App-link\">\n                     Navigate using a link\n                  </Link>\n               </p>\n               <p>\n                  <button\n                     className=\"btn\"\n                     onClick={this.onNavigate.bind(this)}\n                  >\n                     Navigate Imperatively\n                  </button>\n               </p>\n            </header>\n         </div>\n      );\n   }\n};\n","import First from 'pages/First/First'\n\nexport default function getRoutes() {\n    var basePath = process.env.NODE_ENV === 'production' ? '/reach-router-lazy-transitions' : '/';\n    return [\n        {\n            path: basePath,\n            component: First,\n            links: {\n                success: 'second' // relative path or '/second' for absolute path\n            }\n        },\n        {\n            path: `${basePath}/second`, // or '/second'\n            importComponent: () => import('pages/Second/Second'),\n            links: {\n                success: '../third',\n                cancel: '../' // Go back using relative path\n            }\n        },\n        {\n            path: `${basePath}/third`,\n            importComponent: () => import('pages/Third/Third'),\n            links: {\n                cancel: basePath // use absolute path\n            }\n        }\n    ];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport AppRouter from 'lib/AppRouter'\nimport getRoutes from 'routes'\nimport _debounce from 'lodash/debounce'\n// import pages from 'pages'\n\nimport 'index.css'\nimport * as serviceWorker from 'serviceWorker'\n\nReactDOM.render(\n    <Demo/>,\n    document.getElementById('root')\n);\n\nconst debounceCall = _debounce((set, state) => set(state), 300);\n\nfunction Demo() {\n    const [isLoading, setLoading] = useState(false);\n\n    return (\n        <React.Fragment>\n            <AppRouter\n                routes={getRoutes()}\n                timeout={300}\n                classNames=\"container--fade\"\n                onLoading={state => debounceCall(setLoading, state)}\n            />\n            {isLoading &&\n                <div className=\"loading-backdrop\">\n                    <div className=\"loading-indicator\">Loading...</div>\n                </div>\n            }\n        </React.Fragment>\n    );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}